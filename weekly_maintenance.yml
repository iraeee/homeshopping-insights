name: Weekly Maintenance

on:
  schedule:
    # 매주 일요일 03:00 KST (토요일 18:00 UTC)
    - cron: '0 18 * * 6'
    
  workflow_dispatch:

jobs:
  maintenance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install pandas
        sudo apt-get install -y zstd sqlite3
    
    - name: Decompress DB
      run: |
        zstd -d schedule.db.zst -o schedule.db --force
    
    - name: DB optimization
      run: |
        # VACUUM 실행
        sqlite3 schedule.db "VACUUM;"
        
        # 크기 확인
        ls -lh schedule.db
    
    - name: Create monthly backup
      run: |
        mkdir -p monthly_backups
        cp schedule.db "monthly_backups/schedule_$(date +%Y%m).db"
        zstd -19 "monthly_backups/schedule_$(date +%Y%m).db"
        rm "monthly_backups/schedule_$(date +%Y%m).db"
    
    - name: Generate statistics
      run: |
        python3 - <<EOF
        import sqlite3
        import pandas as pd
        from datetime import datetime, timedelta
        
        conn = sqlite3.connect('schedule.db')
        
        # 월별 통계
        query = '''
        SELECT 
            substr(date, 1, 7) as month,
            COUNT(*) as records,
            COUNT(DISTINCT date) as days,
            COUNT(DISTINCT platform) as platforms,
            AVG(revenue) as avg_revenue,
            SUM(revenue) as total_revenue
        FROM schedule
        WHERE date >= date('now', '-3 months')
        GROUP BY month
        ORDER BY month DESC
        '''
        
        df = pd.read_sql_query(query, conn)
        
        print("📊 월별 통계")
        print(df.to_string(index=False))
        
        # CSV로 저장
        df.to_csv('monthly_stats.csv', index=False)
        
        conn.close()
        EOF
    
    - name: Compress and commit
      run: |
        zstd -19 schedule.db -o schedule.db.zst --force
        rm schedule.db
        
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        git add -A
        git diff --quiet && git diff --staged --quiet || {
          git commit -m "🔧 Weekly maintenance: $(date +%Y-%m-%d)"
          git push
        }
