name: Daily Scraping with Compression

on:
  schedule:
    # 오전 7시~오후 10시: 매시간 (KST 07:00-22:00 = UTC 22:00-13:00)
    - cron: '0 22,23 * * *'  # KST 07:00, 08:00
    - cron: '0 0-13 * * *'   # KST 09:00-22:00
    
    # 밤 11시대 집중 실행
    - cron: '30 14 * * *'  # KST 23:30
    - cron: '50 14 * * *'  # KST 23:50
    - cron: '56 14 * * *'  # KST 23:56
    - cron: '59 14 * * *'  # KST 23:59 (자정 직전)
    
  workflow_dispatch:  # 수동 실행 가능

# 동시 실행 방지
concurrency:
  group: scraping
  cancel-in-progress: false

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    # Git 설정
    - name: Configure Git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Actions"
    
    # Python 설정
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    # 의존성 설치
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 pandas openpyxl zstandard pytz
    
    # 최신 변경사항 가져오기
    - name: Pull latest changes
      run: |
        git pull origin main --rebase --strategy-option=theirs || true
    
    # 현재 시간 출력 (디버깅용)
    - name: Check current time
      run: |
        echo "UTC time: $(date -u '+%Y-%m-%d %H:%M:%S')"
        echo "KST time: $(TZ=Asia/Seoul date '+%Y-%m-%d %H:%M:%S')"
    
    # 크롤링 실행
    - name: Run scraping
      run: python schedule_analytics.py
      continue-on-error: true
    
    # 압축 및 백업
    - name: Compress and backup
      run: |
        python compress_and_backup.py || echo "Compression skipped"
    
    # README 업데이트
    - name: Update README
      run: |
        python generate_readme.py || echo "README update skipped"
    
    # 커밋 및 푸시
    - name: Commit and push
      run: |
        # 변경사항 확인
        if [[ -n $(git status -s) ]]; then
          # 최신 상태로 업데이트
          git pull origin main --rebase --strategy-option=theirs || true
          
          # 변경사항 추가
          git add .
          
          # 커밋
          TIMESTAMP=$(TZ=Asia/Seoul date +'%Y-%m-%d %H:%M:%S')
          git commit -m "Update DB and backups [$TIMESTAMP]"
          
          # 푸시 (재시도 3번)
          for i in {1..3}; do
            if git push origin main; then
              echo "Push successful"
              break
            else
              echo "Push failed, attempt $i/3"
              if [ $i -lt 3 ]; then
                echo "Pulling and retrying..."
                git pull origin main --rebase --strategy-option=theirs
                sleep 5
              fi
            fi
          done
        else
          echo "No changes to commit"
        fi
