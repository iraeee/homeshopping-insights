name: Daily Scraping with Compression

on:
  schedule:
    # 한국시간 23:56 = UTC 14:56
    - cron: '56 14 * * *'
    # 2시간마다
    - cron: '0 */2 * * *'
  push:
    branches: [ main ]
  workflow_dispatch:

# 동시 실행 방지
concurrency:
  group: scraping
  cancel-in-progress: false

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    # Git 설정
    - name: Configure Git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Actions"
    
    # Python 설정
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    # 의존성 설치
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 pandas openpyxl zstandard pytz
    
    # 최신 변경사항 가져오기
    - name: Pull latest changes
      run: |
        git pull origin main --rebase --strategy-option=theirs || true
    
    # 크롤링 실행
    - name: Run scraping
      run: python schedule_analytics.py
      continue-on-error: true
    
    # 압축 및 백업
    - name: Compress and backup
      run: |
        python compress_and_backup.py || echo "Compression skipped"
    
    # README 업데이트
    - name: Update README
      run: |
        python generate_readme.py || echo "README update skipped"
    
    # 커밋 및 푸시
    - name: Commit and push
      run: |
        # 변경사항 확인
        if [[ -n $(git status -s) ]]; then
          # 최신 상태로 업데이트
          git pull origin main --rebase --strategy-option=theirs || true
          
          # 변경사항 추가
          git add .
          
          # 커밋
          TIMESTAMP=$(TZ=Asia/Seoul date +'%Y-%m-%d %H:%M:%S')
          git commit -m "Update DB and backups [$TIMESTAMP]"
          
          # 푸시 (재시도 3번)
          for i in {1..3}; do
            if git push origin main; then
              echo "Push successful"
              break
            else
              echo "Push failed, attempt $i/3"
              if [ $i -lt 3 ]; then
                echo "Pulling and retrying..."
                git pull origin main --rebase --strategy-option=theirs
                sleep 5
              fi
            fi
          done
        else
          echo "No changes to commit"
        fi
